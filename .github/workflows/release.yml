name: Release
on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  tagging:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/v')
    steps:
        - name: Get the version
          id: get_version
          run: |
            echo ::set-output name=TAG::`echo $SOURCE_VERSION | cut -d / -f 2`
          env:
            SOURCE_VERSION: ${{ github.event.pull_request.head.ref }}
        - name: Echo tag
          run: echo ${{ steps.get_version.outputs.TAG }}
        - uses: actions/checkout@v2
        - run: |
            git config --global user.email "msuzuki9609@gmail.com"
            git config --global user.name "Masahiro Suzuki"
            git fetch origin ${{ github.event.pull_request.head.ref }}
            git checkout main
            git tag -a `echo '${{ github.event.pull_request.head.ref }}' | sed 's/release\/v//'` -m " "
            git push origin `echo '${{ github.event.pull_request.head.ref }}' | sed 's/release\/v//'`
            git push --delete origin ${{ github.event.pull_request.head.ref }}
  pypi:
    name: Publish Python distributions to Test PyPI
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install poetry
        poetry install
    - name: test release
      run: |
        poetry config repositories.testpypi https://test.pypi.org/legacy/
        poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}
        poetry publish --build -r testpypi
    - name: release
      run: |
        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
        poetry publish --build
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.TAG }}
        release_name: ${{ steps.get_version.outputs.TAG }}
        draft: false
        prerelease: true
        body: |
          This release is automatically generated.
          Please see the pull request.
          [${{ github.event.pull_request.html_url }}](${{ github.event.pull_request.html_url }})